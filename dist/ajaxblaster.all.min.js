/****************************************************************************
 * AJAXBlaster by Matt Tropiano (C) 2018
 * Requires ECMAScript 6, XMLHttpRequest
 * Licensed for use under the MIT License
 * @license
 ****************************************************************************/
!function(e){if(!XMLHttpRequest)return void console.error("Missing required object type: XMLHttpRequest.");let t=e.$A,n={isUndefinedfunction(e){return void 0===e},isNull:function(e){return null===e},isType:function(e,t){return Object.prototype.toString.call(e)==="[object "+t+"]"},isNumber:function(e){return n.isType(e,"Number")},isString:function(e){return n.isType(e,"String")},isArray:function(e){return n.isType(e,"Array")},isFunction:function(e){return n.isType(e,"Function")},isObject:function(e){return n.isType(e,"Object")},isBlank:function(e){},each:function(e,t){for(let n in e)if(e.hasOwnProperty(n)&&t(e[n],n,e.length))break},merge:function(e,t){let r={};return e||(e={}),t||(t={}),n.each(e,(e,s)=>{n.isUndefined(t[s])?r[s]=e:r[s]=t[s]}),n.each(t,(t,s)=>{n.isUndefined(e[s])&&(r[s]=t)}),r},queryString:function(e,t){let r=[];return t&&r.push(""),n.each(e,(e,t)=>{if(n.isArray(e))for(let n=0;n<e.length;n++)r.push(0===r.length?"?":"&"),r.push(encodeURIComponent(t)),r.push("="),r.push(encodeURIComponent(e[n]));else r.push(0===r.length?"?":"&"),r.push(encodeURIComponent(t)),r.push("="),r.push(encodeURIComponent(e))}),r.join("")}};n.nanoTime=performance?function(){return parseInt(1e6*performance.now(),10)}:function(){return 1e6*Date.now()};let r=function(e){return n.isString(e)?e:Object.prototype.toString.call(e)},s={text:r,"text/plain":r},a=function(e,t,n){this.beforeSendFunc=null,this.progressFunc=null,this.successFunc=null,this.failureFunc=null,this.alwaysFunc=null,this.abortFunc=null,e.addEventListener("progress",t=>{this.progressFunc&&this.progressFunc(t.lengthComputable?t.loaded/t.total:0,t.loaded,t.total,e,t)}),e.addEventListener("error",t=>{this.failureFunc&&this.failureFunc(e.status,e.statusText,e,t)}),e.addEventListener("abort",t=>{this.abortFunc&&this.abortFunc(e,t)}),e.addEventListener("load",n=>{let r=parseInt(e.status/100,10);if(4!==r&&5!==r||t.responseIsSuccess){if(this.successFunc)try{const r="charset=";let a=e.getResponseHeader("Content-Type"),o=a.indexOf(";"),u=o>=0?a.substring(0,o):a,i=a.indexOf(r),l=i>=0?a.substring(i+r.length,a.length).trim():null,d=t.responseType||u,c=e.response;s[d]&&(c=s[d](e.response,e.responseType,u,l,a)),this.successFunc(c,e.status,e.statusText,e,n)}catch(t){this.failureFunc&&this.failureFunc(null,null,e,n,t)}}else this.failureFunc&&this.failureFunc(e.status,e.statusText,e,n)}),e.addEventListener("loadend",t=>{this.alwaysFunc&&this.alwaysFunc(e,t)});setTimeout(()=>{try{this.beforeSendFunc&&this.beforeSendFunc(e),e.send(n)}catch(t){this.failureFunc&&this.failureFunc(null,null,e,event,t),this.alwaysFunc&&this.alwaysFunc(event,e)}},0)};a.prototype.beforeSend=function(e){return this.beforeSendFunc=e,this},a.prototype.progress=function(e){return this.progressFunc=e,this},a.prototype.success=function(e){return this.successFunc=e,this},a.prototype.failure=function(e){return this.failureFunc=e,this},a.prototype.always=function(e){return this.alwaysFunc=e,this},a.prototype.abort=function(e){return this.abortFunc=e,this};let o={data:null,dataType:"form",responseType:null,headers:{},responseIsSuccess:!1,async:!0,user:null,password:null};e.AJAXBlaster=function(e){let t=null;n.isString(e)?t={method:"GET",url:e}:n.isObject(e)&&(t=e),t.method?t.method=t.method.toUpperCase():t.method="GET",t.url=t.url||"#";let r=n.merge(o,t),s=r.url,u=null;if(!n.isNull(r.data)&&!n.isUndefined(r.data))if(n.isObject(r.data))if("GET"===r.method||"DELETE"===r.method){s+=n.queryString(r.data,s.indexOf("?")>=0)}else"text"===r.dataType?(u=n.queryString(r.data).substring(1),r.headers["Content-Type"]="text/plain"):"json"===r.dataType?(u=JSON.stringify(r.data),r.headers["Content-Type"]="application/json"):"form"===r.dataType&&(u=n.queryString(r.data).substring(1),r.headers["Content-Type"]="application/x-www-form-urlencoded");else n.isString(r.data)||n.isType(r.data,"DOMString")?"GET"===r.method||"DELETE"===r.method?s+=qs:(u=r.data,r.headers["Content-Type"]=r.dataType||"application/octet-stream"):n.isType(r.data,"ArrayBuffer")?"GET"!==r.method&&"DELETE"!==r.method&&(u=r.data,r.headers["Content-Type"]=r.dataType||"application/octet-stream"):n.isType(r.data,"ArrayBufferView")?"GET"!==r.method&&"DELETE"!==r.method&&(u=r.data,r.headers["Content-Type"]=r.dataType||"application/octet-stream"):n.isType(r.data,"Blob")?"GET"!==r.method&&"DELETE"!==r.method&&(u=r.data,r.headers["Content-Type"]=r.dataType||"application/octet-stream"):n.isType(r.data,"Document")||n.isType(r.data,"HTMLDocument")?"GET"!==r.method&&"DELETE"!==r.method&&(u=r.data,r.headers["Content-Type"]="text/html"):n.isType(r.data,"XMLDocument")?"GET"!==r.method&&"DELETE"!==r.method&&(u=r.data,r.headers["Content-Type"]="application/xml"):n.isType(r.data,"FormData")&&"GET"!==r.method&&"DELETE"!==r.method&&(u=r.data,r.headers["Content-Type"]="multipart/form-data");let i=new XMLHttpRequest;return i.open(r.method,s,r.async,r.user,r.password),r.headers&&n.each(r.headers,(e,t)=>{i.setRequestHeader(t,e)}),new a(i,r,u)},n.each(n,(t,n)=>{e.AJAXBlaster[n]=t}),e.AJAXBlaster.addResponseHandler=function(e,t){let r=function(e,t){s[e]&&console.warn("AJAXBlaster: a script is replacing the response handler for '"+e+"'."),s[e]=t};if(n.isArray(e))for(let n=0;n<e.length;n++)r(e[n],t);else r(e,t)},e.AJAXBlaster.noConflict=function(){e.$A=t}}(this);var $A=$A||AJAXBlaster;!function(e){e?DOMParser?(e.addResponseHandler("html",function(e,t,n){return(new DOMParser).parseFromString(e,n)}),e.addResponseHandler("text/html",function(e){return(new DOMParser).parseFromString(e,"text/html")})):console.error("DOMParser must be present!"):console.error("AJAXBlaster must be loaded first!")}(AJAXBlaster),function(e){e?(e.addResponseHandler(["json","application/json"],function(e){return JSON.parse(e)}),e.jsonGet=function(t,n,r){let s=e.merge({method:"GET",url:t,data:n,responseType:"json"},r);return e(s)},e.jsonDel=function(t,n,r){let s=e.merge({method:"DELETE",url:t,data:n,responseType:"json"},r);return e(s)},e.jsonPatch=function(t,n,r){let s=e.merge({method:"PATCH",url:t,data:n,dataType:"json",responseType:"json"},r);return e(s)},e.jsonPost=function(t,n,r){let s=e.merge({method:"POST",url:t,data:n,dataType:"json",responseType:"json"},r);return e(s)},e.jsonPut=function(t,n,r){let s=e.merge({method:"PUT",url:t,data:n,dataType:"json",responseType:"json"},r);return e(s)}):console.error("AJAXBlaster must be loaded first!")}(AJAXBlaster),function(e){e?(e.call=function(t,n,r){let s=e.merge({method:t,url:n,data:data},r);return e(s)},e.get=function(t,n,r){let s=e.merge({method:"GET",url:t,data:n},r);return e(s)},e.del=function(t,n,r){let s=e.merge({method:"DELETE",url:t,data:n},r);return e(s)},e.patch=function(t,n,r){let s=e.merge({method:"PATCH",url:t,data:n},r);return e(s)},e.post=function(t,n,r){let s=e.merge({method:"POST",url:t,data:n},r);return e(s)},e.put=function(t,n,r){let s=e.merge({method:"PUT",url:t,data:n},r);return e(s)},e.head=function(t,n,r){let s=e.merge({method:"HEAD",url:t,data:n},r);return e(s)}):console.error("AJAXBlaster must be loaded first!")}(AJAXBlaster),function(e){e?DOMParser?(e.addResponseHandler("xml",function(e,t,n){return(new DOMParser).parseFromString(e,n)}),e.addResponseHandler("text/xml",function(e){return(new DOMParser).parseFromString(e,"text/xml")}),e.addResponseHandler("application/xml",function(e){return(new DOMParser).parseFromString(e,"application/xml")})):console.error("DOMParser must be present!"):console.error("AJAXBlaster must be loaded first!")}(AJAXBlaster);
